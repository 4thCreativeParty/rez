name: pypi
on:
  workflow_run:
    workflows:
      - ubuntu
      - mac
      #- windows TEMPORARY
      - installation
    #branches:
    #  - master  TEMPORARY
    types:
      - completed

jobs:
  detect_release:
    name: Detect If New Version Is To Be Released
    runs-on: ubuntu-latest

    steps:
      - name: Run Only After All Previous Workflows Succeed
        uses: ahmadnassri/action-workflow-run-wait@v1

      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Dependencies
        run: |
          sudo apt-get install jq

      - name: Check Versions
        run: |

          # get latest github release
          latest_release_version=$(curl -s https://api.github.com/repos/nerdvegas/rez/releases/latest | jq '.tag_name' -r)

          # get version at HEAD
          this_version=$(cat ./src/rez/utils/_version.py | grep -w _rez_version | tr '"' ' ' | awk '{print $NF}')

          # tell following jobs via env var
          if [ $this_version == $latest_release_version ]
          then
            echo "::set-env name=_GH_CREATE_REZ_RELEASE::0"
          else
            echo "::set-env name=_GH_CREATE_REZ_RELEASE::1"
          fi

  build:
    if: env._GH_CREATE_REZ_RELEASE == '1'
    name: Build Rez
    runs-on: ubuntu-latest
    needs: detect_release

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 2.7

      - name: Build rez
        run: |
          python setup.py sdist bdist_wheel

  publish:
    if: env._GH_CREATE_REZ_RELEASE == '1'
    name: Publish to PyPi
    runs-on: ubuntu-latest
    needs:
      - detect_release
      - build

    steps:
      - name: Install Dependencies
        run: |
          pip install twine

      - name: Upload to PyPi
        run: |
          twine upload dist/*
