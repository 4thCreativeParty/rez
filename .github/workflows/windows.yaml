name: windows

on:
  pull_request:
    paths:
      - 'src/**'
      - '.github/workflows/windows.yaml'
      - '.github/docker/rez-win-base/**'
      - '.github/docker/rez-win-py/**'
      - '!src/rez/utils/_version.py'
      - '!**.md'
  push:
    paths:
      - 'src/**'
      - '.github/workflows/windows.yaml'
      - '.github/docker/rez-win-base/**'
      - '.github/docker/rez-win-py/**'
      - '!src/rez/utils/_version.py'
      - '!**.md'

jobs:
  check_base_image:
    name: Check for latest base docker image
    runs-on: windows-${{ matrix.os-version }}

    strategy:
      matrix:
        os-version:
          - '2019'

    outputs:
      # boo! https://github.community/t/bug-jobs-output-should-return-a-list-for-a-matrix-job/128626
      image_name_2019: ${{ steps.main.outputs.image_name_2019 }}
      image_exists_2019: ${{ steps.main.outputs.image_exists_2019 }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check image exists
        id: main
        run: |
          ${gh_user} = ("${{ github.repository }}" -Split '/')[0]

          # base image name on latest commit
          ${rev} = $( `
            git log -n 1 --author-date-order --pretty=format:%H -- `
            .\.github\docker\rez-win-base\ `
          ).SubString(0, 8)

          ${docker_image} = "${gh_user}/rez-win-${{ matrix.os-version }}-base:${rev}"
          Write-Output "::set-output name=image_name_${{ matrix.os-version }}::${docker_image}"

          # log into docker
          '${{ secrets.DOCKERHUB_TOKEN }}' | docker login -u ${gh_user} --password-stdin

          Write-Output "Checking for image ${docker_image}..."
          $ErrorActionPreference = "Continue"
          docker pull ${docker_image} 2>$null || Write-Output "(no such image)"
          $ErrorActionPreference = "Stop"
          #pwsh -c "docker manifest inspect ${docker_image} 2>&1 > "'$null'

          #if ($LastExitCode -ne 0) {
          #  Write-Output "::set-output name=image_exists_${{ matrix.os-version }}::false"
          #}
          #else {
          #  Write-Output "::set-output name=image_exists_${{ matrix.os-version }}::true"
          #}

  testjob:
    runs-on: ubuntu-latest
    needs: check_base_image
    steps:
      - run: |
          echo "IMAGE NAME IS ${{ needs.check_base_image.outputs.image_name_2019 }}"
          echo "IMAGE EXISTS IS ${{ needs.check_base_image.outputs.image_exists_2019 }}"




#
# Picks up docker image from hub.docker.com as repository.
#
# Pulls without login (public repository only).
# Requires username/repository to match the github repository.
# For example: nerdvegas/rez -> User/Repository: nerdvegas
#
#jobs:
#  main:
#    runs-on: windows-2019
#
#    strategy:
#      matrix:
#        # Needs to match python version of images (see windows-docker-image.yaml)
#        python-version:
#          - '2.7.17'
#          # TODO add back once failing windows py3 builds are investigated
#          - '3.7.5'
#      fail-fast: false
#
#    steps:
#
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: "Pull Docker image nerdvegas/rez-win-py-${{ matrix.python-version }}:latest"
#        run: |
#          ${docker_image} = "nerdvegas/rez-win-py-${{ matrix.python-version }}"
#          docker pull ${docker_image}:latest
#
#      - name: Run Docker image (installs and tests rez)
#        run: |
#          ${docker_image} = "nerdvegas/rez-win-py-${{ matrix.python-version }}"
#          docker run --mount type=bind,src=$pwd,dst=C:\checkout,readonly ${docker_image}:latest
